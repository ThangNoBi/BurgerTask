{"version":3,"sources":["pages/BTBurger.js","App.js","reportWebVitals.js","reducer/burgerReducer.js","reducer/root.js","index.js"],"names":["BTBurger","renderBanh","banhBurger","props","content","PropBurger","getObj","i","push","className","renderMenu","banhMenu","Object","entries","map","index","propsMenu","propsprice","onClick","changeAmount","this","colSpan","banhTongTien","Component","connect","state","BurgerReducer","burger","menu","total","dispatch","propsName","propsamount","type","payload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","burgerState","salad","cheese","beef","action","burgerUpdate","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d91b62fa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n//Kết nối component với React-redux\r\nimport { connect } from \"react-redux\";\r\n//Link CSS\r\nimport \"./burger.css\";\r\n\r\nclass BTBurger extends Component {\r\n  //Hàm render bánh bên trái\r\n  renderBanh = () => {\r\n    let { banhBurger } = this.props;\r\n    let content = [];\r\n    // Cách 1: duyệt object bằng For In\r\n\r\n    for (let PropBurger in banhBurger) {\r\n      let getObj = [];\r\n      for (let i = 0; i < banhBurger[PropBurger]; i++) {\r\n        getObj.push(<div key={i} className={PropBurger}></div>);\r\n      }\r\n      content.push(getObj);\r\n      // console.log(PropBurger, banhBurger[PropBurger]);\r\n    }\r\n    return content;\r\n\r\n    //Cách 2 : Dùng hàm có trong JS để bóc tách Object biến thành các mảng con tương ứng\r\n    // console.log(Object.entries(banhBurger));\r\n    // const getObject = Object.entries(banhBurger).map(([PropBurger, value], index) => {\r\n    //     let content = [];\r\n    //     for (let i = 0; i < value; i++) {\r\n    //       content.push(<div key={i} className={PropBurger}></div>);\r\n    //     }\r\n    //     return content;\r\n    //   }\r\n    // );\r\n    // return getObject;\r\n  };\r\n\r\n  //Hàm render Menu bên phải\r\n  renderMenu = () => {\r\n    //Lấy Props từ Redux\r\n    let { banhMenu, banhBurger } = this.props;\r\n    // console.log(banhMenu);\r\n\r\n    return Object.entries(banhMenu).map(([propsMenu, propsprice], index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{propsMenu}</td>\r\n          <td>\r\n            <button\r\n              onClick={() => this.props.changeAmount(propsMenu, -1)}\r\n              className=\"btn btn-info\"\r\n            >\r\n              -\r\n            </button>\r\n            <span className=\"mx-1\">{banhBurger[propsMenu]}</span>\r\n            <button\r\n              onClick={() => this.props.changeAmount(propsMenu, 1)}\r\n              className=\"btn btn-success\"\r\n            >\r\n              +\r\n            </button>\r\n          </td>\r\n          <td className=\"text-center\">{propsprice}</td>\r\n          <td className=\"text-center\">{banhBurger[propsMenu] * propsprice}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h3 className=\"display-4 text-info text-center\">\r\n          Bài Tập Burger Redux\r\n        </h3>\r\n        <div className=\"row\">\r\n          <div className=\"col-7\">\r\n            <h4 className=\"text-center text-danger\">Burger của bạn</h4>\r\n            <div className=\"breadTop\"></div>\r\n            {this.renderBanh()}\r\n            <div className=\"breadBottom\"></div>\r\n          </div>\r\n          <div className=\"col-5\">\r\n            <h3 className=\"text-center text-danger\">Chọn thức ăn</h3>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Thức ăn</th>\r\n                  <th>Số lượng</th>\r\n                  <th>Đơn giá</th>\r\n                  <th>Thành tiền</th>\r\n                </tr>\r\n                {this.renderMenu()}\r\n              </thead>\r\n              <tfoot>\r\n                <tr>\r\n                  <td colSpan=\"2\"></td>\r\n                  <td className=\"text-center\">Tổng cộng</td>\r\n                  <td className=\"text-center\">{this.props.banhTongTien}</td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    banhBurger: state.BurgerReducer.burger,\r\n    banhMenu: state.BurgerReducer.menu,\r\n    banhTongTien: state.BurgerReducer.total,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeAmount: (propsName, propsamount) => {\r\n      const action = {\r\n        type: \"CHANGE_AMOUNT\",\r\n        payload: {\r\n          propsName,\r\n          propsamount,\r\n        },\r\n      };\r\n      dispatch(action);\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BTBurger);\r\n","import \"./App.css\";\nimport BTBurger from \"./pages/BTBurger\";\n\nfunction App() {\n  return (\n    <div>\n      <BTBurger />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const burgerState = {\r\n  burger: {\r\n    salad: 1,\r\n    cheese: 1,\r\n    beef: 1,\r\n  },\r\n  menu: {\r\n    salad: 15,\r\n    cheese: 25,\r\n    beef: 40,\r\n  },\r\n  total: 80,\r\n};\r\n\r\nconst BurgerReducer = (state = burgerState, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_AMOUNT\": {\r\n      // console.log(action);\r\n      //Bóc tách phần tử từ action.payload\r\n      let { propsName, propsamount } = action.payload;\r\n      //Thay đổi số lượng\r\n      //Tăng 1\r\n      let burgerUpdate = { ...state.burger };\r\n      burgerUpdate[propsName] += propsamount;\r\n      //Giảm 1\r\n      if (propsamount === -1 && state.burger[propsName] < 1) {\r\n        return { ...state };\r\n      }\r\n      state.burger = burgerUpdate;\r\n      //Tính tổng tiền\r\n      state.total += propsamount * state.menu[propsName];\r\n      return { ...state };\r\n    }\r\n  }\r\n  return { ...state };\r\n};\r\n\r\nexport default BurgerReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport BurgerReducer from \"./burgerReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  //gioHangReducer:gioHangReducer,\r\n  BurgerReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//import REDUX\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from './reducer/root';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}